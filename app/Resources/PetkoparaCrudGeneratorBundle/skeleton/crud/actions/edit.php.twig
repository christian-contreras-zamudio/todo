
    /**
     * Displays a form to edit an existing {{ entity }} entity.
     *
{% if 'annotation' == format %}
     * @Route("/{id}/edit", name="{{ route_name_prefix }}_edit")
     * @Method({"GET", "POST"})
{% endif %}
     */
    public function editAction(Request $request, {{ entity_class }} ${{ entity_singularized }}, TranslatorInterface $translator/*, AuthorizationCheckerInterface $authorizationChecker*/)
    {
        // revisamos roles
        /*$access2 = $authorizationChecker->isGranted(new Expression(
                'has_role("ROLE_{{ entity_singularized|upper }}_EDIT") or has_role("ROLE_{{ entity_singularized|upper }}_ALL")'
        ));

        if (!$access2) {
            $html = $this->renderView('Exception/error-acceso.html.twig', array(
            ));
            $response = new Response($html, Response::HTTP_FORBIDDEN);
            return $response;
        }

        if ($this->container->get('security.authorization_checker')->isGranted('IS_AUTHENTICATED_FULLY')) {
            $user = $this->container->get('security.token_storage')->getToken()->getUser();
        }

        if (${{ entity_singularized }}->getRfcEmpresaAlta() == $user->getRfc()) {
            //return new Response('tuyo');
        } else {
            //return new Response('no tuyo');
            return $this->redirectToRoute('{{ route_name_prefix }}', []);
        }*/
        $deleteForm = $this->createDeleteForm(${{ entity_singularized }});
        $editForm = $this->createForm('{{ namespace }}\Form\{{ entity_class }}Type', ${{ entity_singularized }});
        $editForm->handleRequest($request);

        if ($editForm->isSubmitted() && $editForm->isValid()) {
            $em = $this->getDoctrine()->getManager();
            //${{ entity_singularized }}->setUserUpdateId($user->getId());
            $em->persist(${{ entity_singularized }});
            $em->flush();
            
            // traduccion flash
            $translated = $translator->trans('flash_mensaje.editado');
            
            $this->get('session')->getFlashBag()->add('success', $translated);
            return $this->redirectToRoute('{{ route_name_prefix }}_edit', array('id' => ${{ entity_singularized }}->getId()));
        }
{% if bundle_views == false%}
        return $this->render('{{ entity|lower|replace({'\\': '/'}) }}/edit.html.twig', array(
{%else%}
        return $this->render('{{ bundle }}:{{ entity|replace({'\\': '/'}) }}:edit.html.twig', array(
{% endif %}
            '{{ entity_singularized }}' => ${{ entity_singularized }},
            'edit_form' => $editForm->createView(),
            'delete_form' => $deleteForm->createView(),
        ));
    }
    
    
